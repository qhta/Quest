<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuestWPF</name>
    </assembly>
    <members>
        <member name="T:QuestWPF.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:QuestWPF.App.#ctor">
            <summary>
            Sets up the application and registers the Syncfusion license key.
            </summary>
        </member>
        <member name="M:QuestWPF.App.OnStartup(System.Windows.StartupEventArgs)">
            <summary>
            Initializes the application on startup.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:QuestWPF.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:QuestWPF.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:QuestWPF.Helpers.GradeValuesProvider">
            <summary>
            Data source provider for retrieving grade values from a ProjectQualityVM instance.
            </summary>
        </member>
        <member name="P:QuestWPF.Helpers.GradeValuesProvider.ProjectQualityVM">
            <summary>
            The ProjectQualityVM instance from which the grades will be retrieved.
            </summary>
        </member>
        <member name="M:QuestWPF.Helpers.GradeValuesProvider.BeginQuery">
            <summary>
            Starts the process of retrieving data.
            </summary>
        </member>
        <member name="T:QuestWPF.Helpers.QualityNodeValueTemplateSelector">
            <summary>
            Selector for choosing the appropriate DataTemplate for quality node value.
            </summary>
        </member>
        <member name="M:QuestWPF.Helpers.QualityNodeValueTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Method to select the appropriate DataTemplate based on the item and container.
            </summary>
            <param name="item"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="P:QuestWPF.Helpers.QualityNodeValueTemplateSelector.QualityMeasureTemplate">
            <summary>
            Template for displaying a quality measure grade.
            </summary>
        </member>
        <member name="P:QuestWPF.Helpers.QualityNodeValueTemplateSelector.QualityMetricsTemplate">
            <summary>
            Template for displaying document metrics value.
            </summary>
        </member>
        <member name="P:QuestWPF.Helpers.QualityNodeValueTemplateSelector.QualityFactorTemplate">
            <summary>
            Template for displaying document Factor value.
            </summary>
        </member>
        <member name="T:QuestWPF.Helpers.QuestRowStyleSelector">
            <summary>
            Selects a style for TreeGrid rows based on the BackgroundColor of IQualityNodeVM BackgroundColor property.
            </summary>
        </member>
        <member name="M:QuestWPF.Helpers.QuestRowStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
            Selects a style for TreeGrid rows based on the BackgroundColor of IQualityNodeVM BackgroundColor property.
            </summary>
            <param name="item"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="T:QuestWPF.Helpers.QuestViewContentTemplateSelector">
            <summary>
            Selector for choosing the appropriate DataTemplate for quest view content.
            </summary>
        </member>
        <member name="M:QuestWPF.Helpers.QuestViewContentTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Method to select the appropriate DataTemplate based on the item and container.
            </summary>
            <param name="item"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="P:QuestWPF.Helpers.QuestViewContentTemplateSelector.QualityScaleTemplate">
            <summary>
            Template for displaying a quality scale.
            </summary>
        </member>
        <member name="P:QuestWPF.Helpers.QuestViewContentTemplateSelector.DocumentQualityTemplate">
            <summary>
            Template for displaying document quality details.
            </summary>
        </member>
        <member name="T:QuestWPF.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:QuestWPF.MainWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:QuestWPF.MainWindow"/> class.
            </summary>
            <remarks>
            This constructor initializes the components of the main window.
            Ensure that the Syncfusion license key is valid and properly configured before using this application.
            </remarks>
        </member>
        <member name="P:QuestWPF.MainWindow.OpenSpreadsheetCommand">
            <summary>
            Command to open an Excel spreadsheet file.
            </summary>
        </member>
        <member name="P:QuestWPF.MainWindow.StartImportCommand">
            <summary>
            Command to open an Excel spreadsheet file.
            </summary>
        </member>
        <member name="M:QuestWPF.MainWindow.AddFloatingView(System.Windows.Controls.Control,System.String)">
            <summary>
            Add a view to the docking manager.
            </summary>
            <param name="view"></param>
            <param name="header"></param>
        </member>
        <member name="M:QuestWPF.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:QuestWPF.MDIViewModel">
            <summary>
            ViewModel for Multi Document Interface
            </summary>
        </member>
        <member name="P:QuestWPF.MDIViewModel.SwitchMode">
            <summary>
            This property enables you to control how tabs behave, with different SwitchMode values like Immediate, List, None, Quick Tabs, VS2005, and VistaFlip to provide different switching experiences. 
            </summary>
        </member>
        <member name="P:QuestWPF.MDIViewModel.MDILayoutChangedCommand">
            <summary>
            Command to change MDI layout (Cascade, Horizontal, Vertical)
            </summary>
        </member>
        <member name="M:QuestWPF.MDIViewModel.#ctor">
            <summary>
            Initializing constructor,
            </summary>
        </member>
        <member name="P:QuestWPF.MDIViewModel.DockCollections">
            <summary>
            Collection of DockItems for managing dockable panels in the UI.
            </summary>
        </member>
        <member name="T:QuestWPF._ViewModels">
            <summary>
            Static class to hold all ViewModel instances for easy access.
            </summary>
        </member>
        <member name="P:QuestWPF._ViewModels.All">
            <summary>
            An observable list containing all ViewModel instances.
            </summary>
        </member>
        <member name="T:QuestWPF.Views.DocumentQualityView">
            <summary>
            Interaction logic for DocumentQualityView.xaml
            </summary>
            <summary>
            DocumentQualityView
            </summary>
        </member>
        <member name="M:QuestWPF.Views.DocumentQualityView.#ctor">
            <summary>
            Initializing constructor
            </summary>
        </member>
        <member name="M:QuestWPF.Views.DocumentQualityView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:QuestWPF.Views.ExcelView">
            <summary>
            Interaction logic for ExcelView.xaml
            </summary>
            <summary>
            ExcelView
            </summary>
        </member>
        <member name="M:QuestWPF.Views.ExcelView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:QuestWPF.Views.ExcelView"/> class.
            </summary>
            <remarks>This constructor sets up the necessary components for the <see cref="T:QuestWPF.Views.ExcelView"/> instance.
            Ensure that the required dependencies are properly configured before using this class.</remarks>
        </member>
        <member name="F:QuestWPF.Views.ExcelView.FileNameProperty">
            <summary>
            DependencyProperty for the <see cref="P:QuestWPF.Views.ExcelView.FileName"/> property.
            </summary>
        </member>
        <member name="P:QuestWPF.Views.ExcelView.FileName">
            <summary>
            Name of the Excel file to be displayed.
            </summary>
        </member>
        <member name="M:QuestWPF.Views.ExcelView.OpenSpreadsheet(System.String)">
            <summary>
            Opens the specified Excel file and updates the SpreadsheetControl and DataContext accordingly.
            </summary>
            <param name="fileName">Full path to Excel file</param>
        </member>
        <member name="M:QuestWPF.Views.ExcelView.OpenSpreadsheetAsync(System.String)">
            <summary>
            Opens the specified Excel file asynchronously and updates the SpreadsheetControl and DataContext accordingly.
            </summary>
            <param name="fileName">Full path to Excel file</param>
        </member>
        <member name="M:QuestWPF.Views.ExcelView.GetWorkbookInfo(System.String)">
            <summary>
            Retrieves information about the specified workbook file.
            </summary>
            <param name="fileName">The full path to the workbook file to be analyzed.</param>
            <returns>A <see cref="T:QuestIMP.WorkbookInfo"/> object containing metadata and details about the workbook.</returns>
        </member>
        <member name="M:QuestWPF.Views.ExcelView.GetWorkbookInfoAsync(Syncfusion.XlsIO.IWorkbook,QuestIMP.WorkbookInfoVM)">
            <summary>
            Retrieves and populates the workbook information asynchronously.
            </summary>
            <param name="workbook">Opened Excel workbook interface</param>
            <param name="workbookVM">View model of workbook information</param>
            <returns></returns>
        </member>
        <member name="M:QuestWPF.Views.ExcelView.WorksheetListView_OnSelectionChanged(System.Object,Syncfusion.UI.Xaml.Grid.GridSelectionChangedEventArgs)">
            <summary>
            Method to handle selection changes in the worksheet list view.
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Even arguments</param>
            
        </member>
        <member name="M:QuestWPF.Views.ExcelView.RangeTextBlock_OnMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Method to handle mouse left button down event on the range text block.
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Even arguments</param>
        </member>
        <member name="M:QuestWPF.Views.ExcelView.SelectRange(Syncfusion.XlsIO.IRange)">
            <summary>
            Helper method to select a range in the active sheet based on the given IRange object.
            </summary>
            <param name="range">Range in a worksheet</param>
        </member>
        <member name="M:QuestWPF.Views.ExcelView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:QuestWPF.Views.GradeScaleView">
            <summary>
            Interaction logic for GradeScaleView.xaml
            </summary>
            <summary>
            GradeScaleView
            </summary>
        </member>
        <member name="M:QuestWPF.Views.GradeScaleView.#ctor">
            <summary>
            Initializing constructor
            </summary>
        </member>
        <member name="M:QuestWPF.Views.GradeScaleView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:QuestWPF.Views.ImportControl">
            <summary>
            Import control for handling data import operations.
            </summary>
            <summary>
            ImportControl
            </summary>
        </member>
        <member name="M:QuestWPF.Views.ImportControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:QuestWPF.Views.ImportControl"/> class.
            </summary>
        </member>
        <member name="F:QuestWPF.Views.ImportControl.WorkbookInfoProperty">
            <summary>
            Dependency property for binding the <see cref="P:QuestWPF.Views.ImportControl.WorkbookInfo"/> to the control.
            </summary>
        </member>
        <member name="P:QuestWPF.Views.ImportControl.WorkbookInfo">
            <summary>
            Reference to the workbook information view model.
            </summary>
        </member>
        <member name="M:QuestWPF.Views.ImportControl.OnWorkbookInfoChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Callback method invoked when the <see cref="P:QuestWPF.Views.ImportControl.WorkbookInfo"/> property changes.
            </summary>
            <param name="d">The dependency object where the property changed.</param>
            <param name="e">Details about the property change.</param>
        </member>
        <member name="M:QuestWPF.Views.ImportControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:QuestWPF.Views.ProjectsView">
            <summary>
            Interaction logic for ProjectsView.xaml
            </summary>
            <summary>
            ProjectsView
            </summary>
        </member>
        <member name="M:QuestWPF.Views.ProjectsView.#ctor">
            <summary>
            Initializing constructor
            </summary>
        </member>
        <member name="M:QuestWPF.Views.ProjectsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:QuestWPF.Views.QuestView">
            <summary>
            View for displaying and interacting with questionnaires.
            </summary>
            <summary>
            QuestView
            </summary>
        </member>
        <member name="M:QuestWPF.Views.QuestView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:QuestWPF.Views.QuestView"/> class.
            </summary>
        </member>
        <member name="F:QuestWPF.Views.QuestView.FileNameProperty">
            <summary>
            DependencyProperty for the <see cref="P:QuestWPF.Views.QuestView.FileName"/> property.
            </summary>
        </member>
        <member name="P:QuestWPF.Views.QuestView.FileName">
            <summary>
            Name of the Quest file to be displayed.
            </summary>
        </member>
        <member name="F:QuestWPF.Views.QuestView.ProjectNameProperty">
            <summary>
            DependencyProperty for the <see cref="P:QuestWPF.Views.QuestView.ProjectName"/> property.
            </summary>
        </member>
        <member name="P:QuestWPF.Views.QuestView.ProjectName">
            <summary>
            Name of the Quest file to be displayed.
            </summary>
        </member>
        <member name="M:QuestWPF.Views.QuestView.ImportSpreadsheetAsync(System.String,QuestIMP.WorkbookInfo,System.String)">
            <summary>
            Opens the specified Excel file and asynchronously updates the QualityView and DataContext accordingly.
            </summary>
            <param name="excelFileName">Full path to excel file to import</param>
            <param name="workbookInfo">Info about Excel file to import. Contains recognized ranges of questionnaires and aggregation weights</param>
            <param name="dbFileName">Full path to database file to create</param>
        </member>
        <member name="M:QuestWPF.Views.QuestView.ImportWorkbookAsync(Syncfusion.XlsIO.IWorkbook,QuestIMP.WorkbookInfo,Quest.ProjectQualityVM)">
            <summary>
            Retrieves data from workbook and populates the quality view model asynchronously.
            </summary>
            <param name="workbook">Opened Excel workbook</param>
            <param name="workbookInfo">Workbook info object</param>
            <param name="projectQualityVM">Project quality view model</param>
            <returns></returns>
        </member>
        <member name="M:QuestWPF.Views.QuestView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
